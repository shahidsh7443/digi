function onYouTubeIframeAPIReady() {
	if ($("#masthead_player").length) {
		var t = new YT.Player("masthead_player", {
			origin: the_origin,
			events: {
				// onReady: onPlayerReady,
				// onStateChange: onPlayerStateChange
			}
		});
		video_holder.masthead_player = t
	}
	if ($("#sidebar_player").length) {
		var e = new YT.Player("sidebar_player", {
			origin: the_origin,
			events: {
				// onReady: onPlayerReady,
				// onStateChange: onPlayerStateChange
			}
		});
		video_holder.sidebar_player = e
	}
}

function onPlayerReady(t) {
	if (console && console.log) {
		var e = t.target.a.id;
		console.log("<ready id='" + e + "' />", t)
	}
}

function onPlayerStateChange(t) {
	var e, i = t.target.a.id,
		a = t.target.o.videoData.video_id;
	switch (t.data) {
		case 0:
			e = "Stopped";
			break;
		case 1:
			e = "Playing";
			break;
		case 2:
			e = "Paused";
			break;
		case 3:
			e = "Buffering"
	}
	var n = video_holder[i].getCurrentTime(),
		s = video_holder[i].getDuration(),
		r = Math.round(100 * (n / s));
	e = e + ":" + r + "%", _gaq.push(["_trackEvent", "video", current_path + ":" + a, e]), console && console.log && console.log("pushed ['_trackEvent','video','" + current_path + ":" + a + "','" + e + "']")
}! function() {
	"use strict";

	function t() {
		this.$dom = $(document), this.isOldie = !!this.$dom.find("html").hasClass("oldie"), this.click = "click", this.onReady = this.onOldie = this.onTouch = !1, this.uiModules = {}, this.inits = {}, this.path = $("script[gumby-path]").attr("gumby-path") || "js/libs", this.breakpoint = Number($("script[gumby-breakpoint]").attr("gumby-breakpoint")) || 1024
	}
	t.prototype.init = function() {
		var t = this;
		this.$dom.ready(function() {
			t.initUIModules(), t.onReady && t.onReady(), t.isOldie && t.onOldie && t.onOldie(), Modernizr.touch && t.onTouch && t.onTouch()
		})
	}, t.prototype.ready = function(t) {
		t && "function" == typeof t && (this.onReady = t)
	}, t.prototype.oldie = function(t) {
		t && "function" == typeof t && (this.onOldie = t)
	}, t.prototype.touch = function(t) {
		t && "function" == typeof t && (this.onTouch = t)
	}, t.prototype.debug = function() {
		return {
			$dom: this.$dom,
			isOldie: this.isOldie,
			uiModules: this.uiModules,
			click: this.click
		}
	}, t.prototype.selectAttr = function() {
		for (var t = 0; t < arguments.length; t++) {
			var e = arguments[t],
				i = "data-" + arguments[t],
				a = "gumby-" + arguments[t];
			if (this.is("[" + i + "]")) return this.attr(i) ? this.attr(i) : !0;
			if (this.is("[" + a + "]")) return this.attr(a) ? this.attr(a) : !0;
			if (this.is("[" + e + "]")) return this.attr(e) ? this.attr(e) : !0
		}
		return !1
	}, t.prototype.addInitalisation = function(t, e) {
		this.inits[t] = e
	}, t.prototype.initialize = function(t, e) {
		this.inits[t] && "function" == typeof this.inits[t] && this.inits[t](e)
	}, t.prototype.UIModule = function(t) {
		var e = t.module;
		this.uiModules[e] = t
	}, t.prototype.initUIModules = function() {
		var t;
		for (t in this.uiModules) this.uiModules[t].init()
	}, window.Gumby = new t
}(), ! function() {
	"use strict";

	function t(t) {
		this.$el = t, this.$input = this.$el.find("input[type=checkbox]");
		var e = this;
		this.$el.on(Gumby.click, function(t) {
			t.stopImmediatePropagation(), t.preventDefault(), e.$input.is("[disabled]") || (e.$el.hasClass("checked") ? e.update(!1) : e.update(!0))
		}).on("gumby.check", function() {
			e.update(!0)
		}).on("gumby.uncheck", function() {
			e.update(!1)
		}), e.$el.hasClass("checked") && e.update(!0)
	}
	t.prototype.update = function(t) {
		var e = this.$el.find("span");
		t ? (e.append('<i class="icon-check" />'), this.$input.prop("checked", !0).end().addClass("checked").trigger("gumby.onCheck").trigger("gumby.onChange")) : this.$input.prop("checked", !1).end().find("i").remove().end().removeClass("checked").trigger("gumby.onUncheck").trigger("gumby.onChange")
	}, Gumby.addInitalisation("checkboxes", function() {
		$(".checkbox").each(function() {
			var e = $(this);
			return e.data("isCheckbox") ? !0 : (e.data("isCheckbox", !0), new t(e), void 0)
		})
	}), Gumby.UIModule({
		module: "checkbox",
		events: ["onCheck", "onUncheck", "onChange", "check", "uncheck"],
		init: function() {
			Gumby.initialize("checkboxes")
		}
	})
}(), ! function() {
	"use strict";

	function t(t) {
		this.$el = t, this.rate = 0, this.fontSizes = {}, this.setup();
		var e = this;
		this.$el.on("gumby.initialize", function() {
			e.setup()
		}), $(window).on("load resize orientationchange", function() {
			e.resize()
		})
	}
	t.prototype.setup = function() {
		this.rate = Number(Gumby.selectAttr.apply(this.$el, ["rate"])) || 1, this.fontSizes = this.parseSizes(Gumby.selectAttr.apply(this.$el, ["sizes"]))
	}, t.prototype.resize = function() {
		this.$el.css("font-size", this.calculateSize())
	}, t.prototype.calculateSize = function() {
		return Math.max(Math.min(this.$el.width() / (10 * this.rate), parseFloat(this.fontSizes.max)), parseFloat(this.fontSizes.min))
	}, t.prototype.parseSizes = function(t) {
		var e = {
			min: Number.NEGATIVE_INFINITY,
			max: Number.POSITIVE_INFINITY
		};
		return t ? (t.indexOf("|") > -1 && (t = t.split("|"), e.min = Number(t[0]) || e.min, e.max = Number(t[1]) || e.max), e.min = Number(t) || e.min, e) : e
	}, Gumby.addInitalisation("fittext", function(e) {
		$(".fittext").each(function() {
			var i = $(this);
			return i.data("isFittext") && !e ? !0 : i.data("isFittext") && e ? (i.trigger("gumby.initialize"), !0) : (i.data("isFittext", !0), new t(i), void 0)
		})
	}), Gumby.UIModule({
		module: "fittext",
		events: [],
		init: function() {
			Gumby.initialize("fittext")
		}
	})
}(), ! function() {
	"use strict";

	function t(t) {
		this.$el = t, this.fixedPoint = "", this.pinPoint = !1, this.offset = 0, this.pinOffset = 0, this.top = 0, this.constrainEl = !0, this.state = !1, this.measurements = {
			left: 0,
			width: 0
		}, this.setup();
		var e = this;
		$(window).on("scroll load", function() {
			e.monitorScroll()
		}), this.$el.on("gumby.initialize", function() {
			e.setup()
		})
	}
	t.prototype.setup = function() {
		var t = this;
		this.fixedPoint = this.parseAttrValue(Gumby.selectAttr.apply(this.$el, ["fixed"])), this.pinPoint = Gumby.selectAttr.apply(this.$el, ["pin"]) || !1, this.offset = Number(Gumby.selectAttr.apply(this.$el, ["offset"])) || 0, this.pinOffset = Number(Gumby.selectAttr.apply(this.$el, ["pinoffset"])) || 0, this.top = Number(Gumby.selectAttr.apply(this.$el, ["top"])) || 0, this.constrainEl = Gumby.selectAttr.apply(this.$el, ["constrain"]) || !0, "false" === this.constrainEl && (this.constrainEl = !1), this.$parent = this.$el.parents(".columns, .column, .row"), this.$parent = this.$parent.length ? this.$parent.first() : !1, this.parentRow = this.$parent ? !!this.$parent.hasClass("row") : !1, this.pinPoint && (this.pinPoint = this.parseAttrValue(this.pinPoint)), this.$parent && this.constrainEl && (this.measure(), $(window).resize(function() {
			t.state && (t.measure(), t.constrain())
		}))
	}, t.prototype.monitorScroll = function() {
		var t = $(window).scrollTop(),
			e = this.fixedPoint instanceof jQuery ? this.fixedPoint.offset().top : this.fixedPoint,
			i = !1;
		this.pinPoint && (i = this.pinPoint instanceof jQuery ? this.pinPoint.offset().top : this.pinPoint), this.offset && (e -= this.offset), this.pinOffset && (i -= this.pinOffset), t >= e && "fixed" !== this.state ? (!i || i > t) && this.fix() : e > t && "fixed" === this.state ? this.unfix() : i && t >= i && "pinned" !== this.state && this.pin()
	}, t.prototype.fix = function() {
		this.state = "fixed", this.$el.css({
			top: 0 + this.top
		}).addClass("fixed").removeClass("unfixed pinned").trigger("gumby.onFixed"), this.$parent && this.constrain()
	}, t.prototype.unfix = function() {
		this.state = "unfixed", this.$el.addClass("unfixed").removeClass("fixed pinned").trigger("gumby.onUnfixed")
	}, t.prototype.pin = function() {
		this.state = "pinned", this.$el.css({
			top: this.$el.offset().top
		}).addClass("pinned fixed").removeClass("unfixed").trigger("gumby.onPinned")
	}, t.prototype.constrain = function() {
		this.$el.css({
			left: this.measurements.left,
			width: this.measurements.width
		})
	}, t.prototype.measure = function() {
		var t, e = this.$parent.offset();
		this.measurements.left = e.left, this.measurements.width = this.$parent.width(), this.parentRow && (t = Number(this.$parent.css("paddingLeft").replace(/px/, "")), t && (this.measurements.left += t))
	}, t.prototype.parseAttrValue = function(t) {
		if ($.isNumeric(t)) return Number(t);
		if ("top" === t) return this.$el.offset().top;
		var e = $(t);
		return e
	}, Gumby.addInitalisation("fixed", function() {
		$("[data-fixed],[gumby-fixed],[fixed]").each(function() {
			var e = $(this);
			return e.data("isFixed") ? !0 : (e.data("isFixed", !0), new t(e), void 0)
		})
	}), Gumby.UIModule({
		module: "fixed",
		events: ["onFixed", "onUnfixed"],
		init: function() {
			Gumby.initialize("fixed")
		}
	})
}(), ! function() {
	"use strict";

	function t(t) {
		this.$el = t, this.$input = this.$el.find("input[type=radio]");
		var e = this;
		this.$el.on(Gumby.click, function(t) {
			t.stopImmediatePropagation(), t.preventDefault(), e.$input.is("[disabled]") || e.update()
		}).on("gumby.check", function() {
			e.update()
		}), e.$el.hasClass("checked") && e.update()
	}
	t.prototype.update = function() {
		var t = this.$el.find("span"),
			e = 'input[name="' + this.$input.attr("name") + '"]';
		$(".radio").has(e).removeClass("checked").find("input").prop("checked", !1).end().find("i").remove(), this.$input.prop("checked", !0), t.append('<i class="icon-dot" />'), this.$el.addClass("checked").trigger("gumby.onChange")
	}, Gumby.addInitalisation("radiobtns", function() {
		$(".radio").each(function() {
			var e = $(this);
			return e.data("isRadioBtn") ? !0 : (e.data("isRadioBtn", !0), new t(e), void 0)
		})
	}), Gumby.UIModule({
		module: "radiobtn",
		events: ["onChange", "check"],
		init: function() {
			Gumby.initialize("radiobtns")
		}
	})
}(), ! function() {
	"use strict";

	function t(t) {
		this.$el = t, this.imageSrc = this.$el.attr("src"), this.retinaSrc = this.fetchRetinaImage(), this.$retinaImg = $(new Image);
		var e = this;
		return this.retinaSrc ? (this.$retinaImg.attr("src", this.retinaSrc).load(function() {
			e.retinaImageLoaded()
		}), void 0) : !1
	}
	t.prototype.fetchRetinaImage = function() {
		var t = this.imageSrc,
			e = this.imageSrc.search(/(\.|\/)(gif|jpe?g|png)$/i);
		return 0 > e ? !1 : t.substr(0, e) + "@2x" + t.substr(e, t.length)
	}, t.prototype.retinaImageLoaded = function() {
		this.$el.attr("src", this.$retinaImg.attr("src")).trigger("gumby.onRetina")
	}, Gumby.addInitalisation("retina", function() {
		!window.devicePixelRatio || window.devicePixelRatio <= 1 || $("img[data-retina],img[gumby-retina],img[retina]").each(function() {
			var e = $(this);
			return e.data("isRetina") ? !0 : (e.data("isRetina", !0), new t(e), void 0)
		})
	}), Gumby.UIModule({
		module: "retina",
		events: ["onRetina"],
		init: function() {
			Gumby.initialize("retina")
		}
	})
}(), ! function() {
	"use strict";

	function t(t) {
		this.$el = $(t), this.targets = [], this.on = "", this.$el.length && this.init()
	}

	function e(t) {
		this.$el = $(t), this.targets = [], this.on = "", this.$el.length && this.init()
	}
	t.prototype.init = function() {
		var t = this;
		this.setup(), this.$el.on(this.on, function(e) {
			e.stopImmediatePropagation(), "A" === $(this).prop("tagName") && e.preventDefault(), t.trigger(t.triggered)
		}).on("gumby.trigger", function() {
			t.trigger(t.triggered)
		}).on("gumby.initialize", function() {
			t.setup()
		})
	}, t.prototype.setup = function() {
		this.targets = this.parseTargets(), this.on = Gumby.selectAttr.apply(this.$el, ["on"]) || Gumby.click, this.className = Gumby.selectAttr.apply(this.$el, ["classname"]) || "active"
	}, t.prototype.parseTargets = function() {
		var t = Gumby.selectAttr.apply(this.$el, ["trigger"]),
			e = 0,
			i = [];
		return t ? (e = t.indexOf("|"), -1 === e ? [$(t)] : (i = t.split("|"), i.length > 1 ? [$(i[0]), $(i[1])] : [$(i[0])])) : !1
	}, t.prototype.triggered = function() {
		this.$el.trigger("gumby.onTrigger", [this.$el.hasClass(this.className)])
	}, e.prototype = new t, t.prototype.trigger = function(t) {
		this.targets ? 1 == this.targets.length ? this.$el.add(this.targets[0]).toggleClass(this.className) : this.targets.length > 1 && (this.targets[0].hasClass(this.className) ? (this.$el.add(this.targets[0]).removeClass(this.className), this.targets[1].addClass(this.className)) : (this.targets[1].removeClass(this.className), this.$el.add(this.targets[0]).addClass(this.className))) : this.$el.toggleClass(this.className), t && "function" == typeof t && t.apply(this)
	}, e.prototype.trigger = function(t) {
		this.targets ? 1 == this.targets.length ? this.$el.add(this.targets[0]).addClass(this.className) : this.targets.length > 1 && (this.$el.add(this.targets[0]).addClass(this.className), this.targets[1].removeClass(this.className)) : this.$el.addClass(this.className), t && "function" == typeof t && t.apply(this)
	}, Gumby.addInitalisation("toggles", function(e) {
		$(".toggle").each(function() {
			var i = $(this);
			return i.data("isToggle") && !e ? !0 : (i.data("isToggle") && e && i.trigger("gumby.initialize"), i.data("isToggle", !0), new t(i), void 0)
		})
	}), Gumby.addInitalisation("switches", function(t) {
		$(".switch").each(function() {
			var i = $(this);
			return i.data("isSwitch") && !t ? !0 : i.data("isSwitch") && t ? (i.trigger("gumby.initialize"), !0) : (i.data("isSwitch", !0), new e(i), void 0)
		})
	}), Gumby.UIModule({
		module: "toggleswitch",
		events: ["trigger", "onTrigger"],
		init: function() {
			Gumby.initialize("switches"), Gumby.initialize("toggles")
		}
	})
}(), ! function() {
	"use strict";

	function t(t) {
		this.$el = t, this.$holder = Gumby.selectAttr.apply(this.$el, ["holder"]), this.ratio = Number(Gumby.selectAttr.apply(this.$el, ["parallax"])) || 1, this.offset = Number(Gumby.selectAttr.apply(this.$el, ["offset"])) || 0, this.startPos = (this.$el.offset().top - this.offset) * this.ratio, this.$holder && (this.$holder = $(this.$holder)), this.$holder && this.$holder.length ? this.startPos -= this.$holder.offset().top : this.$holder = $(window);
		var e = this;
		this.setPosition(), this.$holder.scroll(function() {
			e.scroll()
		}), this.scroll()
	}
	Modernizr.touch || (t.prototype.scroll = function() {
		this.setPosition(this.startPos - this.$holder.scrollTop() * this.ratio)
	}, t.prototype.setPosition = function(t) {
		this.$el.css("backgroundPosition", "50% " + t + "px")
	}, Gumby.addInitalisation("parallax", function() {
		$(window).load(function() {
			setTimeout(function() {
				$(".parallax").each(function() {
					var e = $(this);
					return e.data("isParallax") ? !0 : (e.data("isParallax", !0), new t(e), void 0)
				})
			}, 200)
		})
	}), Gumby.UIModule({
		module: "parallax",
		events: [],
		init: function() {
			Gumby.initialize("parallax")
		}
	}))
}(), Modernizr.load({
		test: Modernizr.touch,
		yep: Gumby.path + "/jquery.mobile.custom.min.js",
		callback: function() {
			$.mobile && (window.Gumby.click += " tap")
		},
		complete: function() {
			window.Gumby.init(), "function" == typeof define && define.amd && define(window.Gumby)
		}
	}),
	function(t) {
		t.extend(t.fn, {
			validate: function(e) {
				if (!this.length) return e && e.debug && window.console && console.warn("Nothing selected, can't validate, returning nothing."), void 0;
				var i = t.data(this[0], "validator");
				return i ? i : (this.attr("novalidate", "novalidate"), i = new t.validator(e, this[0]), t.data(this[0], "validator", i), i.settings.onsubmit && (this.validateDelegate(":submit", "click", function(e) {
					i.settings.submitHandler && (i.submitButton = e.target), t(e.target).hasClass("cancel") && (i.cancelSubmit = !0), void 0 !== t(e.target).attr("formnovalidate") && (i.cancelSubmit = !0)
				}), this.submit(function(e) {
					function a() {
						var a;
						return i.settings.submitHandler ? (i.submitButton && (a = t("<input type='hidden'/>").attr("name", i.submitButton.name).val(t(i.submitButton).val()).appendTo(i.currentForm)), i.settings.submitHandler.call(i, i.currentForm, e), i.submitButton && a.remove(), !1) : !0
					}
					return i.settings.debug && e.preventDefault(), i.cancelSubmit ? (i.cancelSubmit = !1, a()) : i.form() ? i.pendingRequest ? (i.formSubmitted = !0, !1) : a() : (i.focusInvalid(), !1)
				})), i)
			},
			valid: function() {
				if (t(this[0]).is("form")) return this.validate().form();
				var e = !0,
					i = t(this[0].form).validate();
				return this.each(function() {
					e = e && i.element(this)
				}), e
			},
			removeAttrs: function(e) {
				var i = {},
					a = this;
				return t.each(e.split(/\s/), function(t, e) {
					i[e] = a.attr(e), a.removeAttr(e)
				}), i
			},
			rules: function(e, i) {
				var a = this[0];
				if (e) {
					var n = t.data(a.form, "validator").settings,
						s = n.rules,
						r = t.validator.staticRules(a);
					switch (e) {
						case "add":
							t.extend(r, t.validator.normalizeRule(i)), delete r.messages, s[a.name] = r, i.messages && (n.messages[a.name] = t.extend(n.messages[a.name], i.messages));
							break;
						case "remove":
							if (!i) return delete s[a.name], r;
							var o = {};
							return t.each(i.split(/\s/), function(t, e) {
								o[e] = r[e], delete r[e]
							}), o
					}
				}
				var u = t.validator.normalizeRules(t.extend({}, t.validator.classRules(a), t.validator.attributeRules(a), t.validator.dataRules(a), t.validator.staticRules(a)), a);
				if (u.required) {
					var d = u.required;
					delete u.required, u = t.extend({
						required: d
					}, u)
				}
				return u
			}
		}), t.extend(t.expr[":"], {
			blank: function(e) {
				return !t.trim("" + t(e).val())
			},
			filled: function(e) {
				return !!t.trim("" + t(e).val())
			},
			unchecked: function(e) {
				return !t(e).prop("checked")
			}
		}), t.validator = function(e, i) {
			this.settings = t.extend(!0, {}, t.validator.defaults, e), this.currentForm = i, this.init()
		}, t.validator.format = function(e, i) {
			return 1 === arguments.length ? function() {
				var i = t.makeArray(arguments);
				return i.unshift(e), t.validator.format.apply(this, i)
			} : (arguments.length > 2 && i.constructor !== Array && (i = t.makeArray(arguments).slice(1)), i.constructor !== Array && (i = [i]), t.each(i, function(t, i) {
				e = e.replace(RegExp("\\{" + t + "\\}", "g"), function() {
					return i
				})
			}), e)
		}, t.extend(t.validator, {
			defaults: {
				messages: {},
				groups: {},
				rules: {},
				errorClass: "error",
				validClass: "valid",
				errorElement: "label",
				focusInvalid: !0,
				errorContainer: t([]),
				errorLabelContainer: t([]),
				onsubmit: !0,
				ignore: ":hidden",
				ignoreTitle: !1,
				onfocusin: function(t) {
					this.lastActive = t, this.settings.focusCleanup && !this.blockFocusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, t, this.settings.errorClass, this.settings.validClass), this.addWrapper(this.errorsFor(t)).hide())
				},
				onfocusout: function(t) {
					this.checkable(t) || !(t.name in this.submitted) && this.optional(t) || this.element(t)
				},
				onkeyup: function(t, e) {
					(9 !== e.which || "" !== this.elementValue(t)) && (t.name in this.submitted || t === this.lastElement) && this.element(t)
				},
				onclick: function(t) {
					t.name in this.submitted ? this.element(t) : t.parentNode.name in this.submitted && this.element(t.parentNode)
				},
				highlight: function(e, i, a) {
					"radio" === e.type ? this.findByName(e.name).addClass(i).removeClass(a) : t(e).addClass(i).removeClass(a)
				},
				unhighlight: function(e, i, a) {
					"radio" === e.type ? this.findByName(e.name).removeClass(i).addClass(a) : t(e).removeClass(i).addClass(a)
				}
			},
			setDefaults: function(e) {
				t.extend(t.validator.defaults, e)
			},
			messages: {
				required: "This field is required.",
				remote: "Please fix this field.",
				email: "Please enter a valid email address.",
				url: "Please enter a valid URL.",
				date: "Please enter a valid date.",
				dateISO: "Please enter a valid date (ISO).",
				number: "Please enter a valid number.",
				digits: "Please enter only digits.",
				creditcard: "Please enter a valid credit card number.",
				equalTo: "Please enter the same value again.",
				maxlength: t.validator.format("Please enter no more than {0} characters."),
				minlength: t.validator.format("Please enter at least {0} characters."),
				rangelength: t.validator.format("Please enter a value between {0} and {1} characters long."),
				range: t.validator.format("Please enter a value between {0} and {1}."),
				max: t.validator.format("Please enter a value less than or equal to {0}."),
				min: t.validator.format("Please enter a value greater than or equal to {0}.")
			},
			autoCreateRanges: !1,
			prototype: {
				init: function() {
					function e(e) {
						var i = t.data(this[0].form, "validator"),
							a = "on" + e.type.replace(/^validate/, "");
						i.settings[a] && i.settings[a].call(i, this[0], e)
					}
					this.labelContainer = t(this.settings.errorLabelContainer), this.errorContext = this.labelContainer.length && this.labelContainer || t(this.currentForm), this.containers = t(this.settings.errorContainer).add(this.settings.errorLabelContainer), this.submitted = {}, this.valueCache = {}, this.pendingRequest = 0, this.pending = {}, this.invalid = {}, this.reset();
					var i = this.groups = {};
					t.each(this.settings.groups, function(e, a) {
						"string" == typeof a && (a = a.split(/\s/)), t.each(a, function(t, a) {
							i[a] = e
						})
					});
					var a = this.settings.rules;
					t.each(a, function(e, i) {
						a[e] = t.validator.normalizeRule(i)
					}), t(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'] ", "focusin focusout keyup", e).validateDelegate("[type='radio'], [type='checkbox'], select, option", "click", e), this.settings.invalidHandler && t(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler)
				},
				form: function() {
					return this.checkForm(), t.extend(this.submitted, this.errorMap), this.invalid = t.extend({}, this.errorMap), this.valid() || t(this.currentForm).triggerHandler("invalid-form", [this]), this.showErrors(), this.valid()
				},
				checkForm: function() {
					this.prepareForm();
					for (var t = 0, e = this.currentElements = this.elements(); e[t]; t++) this.check(e[t]);
					return this.valid()
				},
				element: function(e) {
					e = this.validationTargetFor(this.clean(e)), this.lastElement = e, this.prepareElement(e), this.currentElements = t(e);
					var i = this.check(e) !== !1;
					return i ? delete this.invalid[e.name] : this.invalid[e.name] = !0, this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)), this.showErrors(), i
				},
				showErrors: function(e) {
					if (e) {
						t.extend(this.errorMap, e), this.errorList = [];
						for (var i in e) this.errorList.push({
							message: e[i],
							element: this.findByName(i)[0]
						});
						this.successList = t.grep(this.successList, function(t) {
							return !(t.name in e)
						})
					}
					this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors()
				},
				resetForm: function() {
					t.fn.resetForm && t(this.currentForm).resetForm(), this.submitted = {}, this.lastElement = null, this.prepareForm(), this.hideErrors(), this.elements().removeClass(this.settings.errorClass).removeData("previousValue")
				},
				numberOfInvalids: function() {
					return this.objectLength(this.invalid)
				},
				objectLength: function(t) {
					var e = 0;
					for (var i in t) e++;
					return e
				},
				hideErrors: function() {
					this.addWrapper(this.toHide).hide()
				},
				valid: function() {
					return 0 === this.size()
				},
				size: function() {
					return this.errorList.length
				},
				focusInvalid: function() {
					if (this.settings.focusInvalid) try {
						t(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin")
					} catch (e) {}
				},
				findLastActive: function() {
					var e = this.lastActive;
					return e && 1 === t.grep(this.errorList, function(t) {
						return t.element.name === e.name
					}).length && e
				},
				elements: function() {
					var e = this,
						i = {};
					return t(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled]").not(this.settings.ignore).filter(function() {
						return !this.name && e.settings.debug && window.console && console.error("%o has no name assigned", this), this.name in i || !e.objectLength(t(this).rules()) ? !1 : (i[this.name] = !0, !0)
					})
				},
				clean: function(e) {
					return t(e)[0]
				},
				errors: function() {
					var e = this.settings.errorClass.replace(" ", ".");
					return t(this.settings.errorElement + "." + e, this.errorContext)
				},
				reset: function() {
					this.successList = [], this.errorList = [], this.errorMap = {}, this.toShow = t([]), this.toHide = t([]), this.currentElements = t([])
				},
				prepareForm: function() {
					this.reset(), this.toHide = this.errors().add(this.containers)
				},
				prepareElement: function(t) {
					this.reset(), this.toHide = this.errorsFor(t)
				},
				elementValue: function(e) {
					var i = t(e).attr("type"),
						a = t(e).val();
					return "radio" === i || "checkbox" === i ? t("input[name='" + t(e).attr("name") + "']:checked").val() : "string" == typeof a ? a.replace(/\r/g, "") : a
				},
				check: function(e) {
					e = this.validationTargetFor(this.clean(e));
					var i, a = t(e).rules(),
						n = !1,
						s = this.elementValue(e);
					for (var r in a) {
						var o = {
							method: r,
							parameters: a[r]
						};
						try {
							if (i = t.validator.methods[r].call(this, s, e, o.parameters), "dependency-mismatch" === i) {
								n = !0;
								continue
							}
							if (n = !1, "pending" === i) return this.toHide = this.toHide.not(this.errorsFor(e)), void 0;
							if (!i) return this.formatAndAdd(e, o), !1
						} catch (u) {
							throw this.settings.debug && window.console && console.log("Exception occurred when checking element " + e.id + ", check the '" + o.method + "' method.", u), u
						}
					}
					return n ? void 0 : (this.objectLength(a) && this.successList.push(e), !0)
				},
				customDataMessage: function(e, i) {
					return t(e).data("msg-" + i.toLowerCase()) || e.attributes && t(e).attr("data-msg-" + i.toLowerCase())
				},
				customMessage: function(t, e) {
					var i = this.settings.messages[t];
					return i && (i.constructor === String ? i : i[e])
				},
				findDefined: function() {
					for (var t = 0; arguments.length > t; t++)
						if (void 0 !== arguments[t]) return arguments[t];
					return void 0
				},
				defaultMessage: function(e, i) {
					return this.findDefined(this.customMessage(e.name, i), this.customDataMessage(e, i), !this.settings.ignoreTitle && e.title || void 0, t.validator.messages[i], "<strong>Warning: No message defined for " + e.name + "</strong>")
				},
				formatAndAdd: function(e, i) {
					var a = this.defaultMessage(e, i.method),
						n = /\$?\{(\d+)\}/g;
					"function" == typeof a ? a = a.call(this, i.parameters, e) : n.test(a) && (a = t.validator.format(a.replace(n, "{$1}"), i.parameters)), this.errorList.push({
						message: a,
						element: e
					}), this.errorMap[e.name] = a, this.submitted[e.name] = a
				},
				addWrapper: function(t) {
					return this.settings.wrapper && (t = t.add(t.parent(this.settings.wrapper))), t
				},
				defaultShowErrors: function() {
					var t, e;
					for (t = 0; this.errorList[t]; t++) {
						var i = this.errorList[t];
						this.settings.highlight && this.settings.highlight.call(this, i.element, this.settings.errorClass, this.settings.validClass), this.showLabel(i.element, i.message)
					}
					if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success)
						for (t = 0; this.successList[t]; t++) this.showLabel(this.successList[t]);
					if (this.settings.unhighlight)
						for (t = 0, e = this.validElements(); e[t]; t++) this.settings.unhighlight.call(this, e[t], this.settings.errorClass, this.settings.validClass);
					this.toHide = this.toHide.not(this.toShow), this.hideErrors(), this.addWrapper(this.toShow).show()
				},
				validElements: function() {
					return this.currentElements.not(this.invalidElements())
				},
				invalidElements: function() {
					return t(this.errorList).map(function() {
						return this.element
					})
				},
				showLabel: function(e, i) {
					var a = this.errorsFor(e);
					a.length ? (a.removeClass(this.settings.validClass).addClass(this.settings.errorClass), a.html(i)) : (a = t("<" + this.settings.errorElement + ">").attr("for", this.idOrName(e)).addClass(this.settings.errorClass).html(i || ""), this.settings.wrapper && (a = a.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), this.labelContainer.append(a).length || (this.settings.errorPlacement ? this.settings.errorPlacement(a, t(e)) : a.insertAfter(e))), !i && this.settings.success && (a.text(""), "string" == typeof this.settings.success ? a.addClass(this.settings.success) : this.settings.success(a, e)), this.toShow = this.toShow.add(a)
				},
				errorsFor: function(e) {
					var i = this.idOrName(e);
					return this.errors().filter(function() {
						return t(this).attr("for") === i
					})
				},
				idOrName: function(t) {
					return this.groups[t.name] || (this.checkable(t) ? t.name : t.id || t.name)
				},
				validationTargetFor: function(t) {
					return this.checkable(t) && (t = this.findByName(t.name).not(this.settings.ignore)[0]), t
				},
				checkable: function(t) {
					return /radio|checkbox/i.test(t.type)
				},
				findByName: function(e) {
					return t(this.currentForm).find("[name='" + e + "']")
				},
				getLength: function(e, i) {
					switch (i.nodeName.toLowerCase()) {
						case "select":
							return t("option:selected", i).length;
						case "input":
							if (this.checkable(i)) return this.findByName(i.name).filter(":checked").length
					}
					return e.length
				},
				depend: function(t, e) {
					return this.dependTypes[typeof t] ? this.dependTypes[typeof t](t, e) : !0
				},
				dependTypes: {
					"boolean": function(t) {
						return t
					},
					string: function(e, i) {
						return !!t(e, i.form).length
					},
					"function": function(t, e) {
						return t(e)
					}
				},
				optional: function(e) {
					var i = this.elementValue(e);
					return !t.validator.methods.required.call(this, i, e) && "dependency-mismatch"
				},
				startRequest: function(t) {
					this.pending[t.name] || (this.pendingRequest++, this.pending[t.name] = !0)
				},
				stopRequest: function(e, i) {
					this.pendingRequest--, 0 > this.pendingRequest && (this.pendingRequest = 0), delete this.pending[e.name], i && 0 === this.pendingRequest && this.formSubmitted && this.form() ? (t(this.currentForm).submit(), this.formSubmitted = !1) : !i && 0 === this.pendingRequest && this.formSubmitted && (t(this.currentForm).triggerHandler("invalid-form", [this]), this.formSubmitted = !1)
				},
				previousValue: function(e) {
					return t.data(e, "previousValue") || t.data(e, "previousValue", {
						old: null,
						valid: !0,
						message: this.defaultMessage(e, "remote")
					})
				}
			},
			classRuleSettings: {
				required: {
					required: !0
				},
				email: {
					email: !0
				},
				url: {
					url: !0
				},
				date: {
					date: !0
				},
				dateISO: {
					dateISO: !0
				},
				number: {
					number: !0
				},
				digits: {
					digits: !0
				},
				creditcard: {
					creditcard: !0
				}
			},
			addClassRules: function(e, i) {
				e.constructor === String ? this.classRuleSettings[e] = i : t.extend(this.classRuleSettings, e)
			},
			classRules: function(e) {
				var i = {},
					a = t(e).attr("class");
				return a && t.each(a.split(" "), function() {
					this in t.validator.classRuleSettings && t.extend(i, t.validator.classRuleSettings[this])
				}), i
			},
			attributeRules: function(e) {
				var i = {},
					a = t(e),
					n = a[0].getAttribute("type");
				for (var s in t.validator.methods) {
					var r;
					"required" === s ? (r = a.get(0).getAttribute(s), "" === r && (r = !0), r = !!r) : r = a.attr(s), /min|max/.test(s) && (null === n || /number|range|text/.test(n)) && (r = Number(r)), r ? i[s] = r : n === s && "range" !== n && (i[s] = !0)
				}
				return i.maxlength && /-1|2147483647|524288/.test(i.maxlength) && delete i.maxlength, i
			},
			dataRules: function(e) {
				var i, a, n = {},
					s = t(e);
				for (i in t.validator.methods) a = s.data("rule-" + i.toLowerCase()), void 0 !== a && (n[i] = a);
				return n
			},
			staticRules: function(e) {
				var i = {},
					a = t.data(e.form, "validator");
				return a.settings.rules && (i = t.validator.normalizeRule(a.settings.rules[e.name]) || {}), i
			},
			normalizeRules: function(e, i) {
				return t.each(e, function(a, n) {
					if (n === !1) return delete e[a], void 0;
					if (n.param || n.depends) {
						var s = !0;
						switch (typeof n.depends) {
							case "string":
								s = !!t(n.depends, i.form).length;
								break;
							case "function":
								s = n.depends.call(i, i)
						}
						s ? e[a] = void 0 !== n.param ? n.param : !0 : delete e[a]
					}
				}), t.each(e, function(a, n) {
					e[a] = t.isFunction(n) ? n(i) : n
				}), t.each(["minlength", "maxlength"], function() {
					e[this] && (e[this] = Number(e[this]))
				}), t.each(["rangelength", "range"], function() {
					var i;
					e[this] && (t.isArray(e[this]) ? e[this] = [Number(e[this][0]), Number(e[this][1])] : "string" == typeof e[this] && (i = e[this].split(/[\s,]+/), e[this] = [Number(i[0]), Number(i[1])]))
				}), t.validator.autoCreateRanges && (e.min && e.max && (e.range = [e.min, e.max], delete e.min, delete e.max), e.minlength && e.maxlength && (e.rangelength = [e.minlength, e.maxlength], delete e.minlength, delete e.maxlength)), e
			},
			normalizeRule: function(e) {
				if ("string" == typeof e) {
					var i = {};
					t.each(e.split(/\s/), function() {
						i[this] = !0
					}), e = i
				}
				return e
			},
			addMethod: function(e, i, a) {
				t.validator.methods[e] = i, t.validator.messages[e] = void 0 !== a ? a : t.validator.messages[e], 3 > i.length && t.validator.addClassRules(e, t.validator.normalizeRule(e))
			},
			methods: {
				required: function(e, i, a) {
					if (!this.depend(a, i)) return "dependency-mismatch";
					if ("select" === i.nodeName.toLowerCase()) {
						var n = t(i).val();
						return n && n.length > 0
					}
					return this.checkable(i) ? this.getLength(e, i) > 0 : t.trim(e).length > 0
				},
				email: function(t, e) {
					return this.optional(e) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(t)
				},
				url: function(t, e) {
					return this.optional(e) || /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(t)
				},
				date: function(t, e) {
					return this.optional(e) || !/Invalid|NaN/.test("" + new Date(t))
				},
				dateISO: function(t, e) {
					return this.optional(e) || /^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/.test(t)
				},
				number: function(t, e) {
					return this.optional(e) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(t)
				},
				digits: function(t, e) {
					return this.optional(e) || /^\d+$/.test(t)
				},
				creditcard: function(t, e) {
					if (this.optional(e)) return "dependency-mismatch";
					if (/[^0-9 \-]+/.test(t)) return !1;
					var i = 0,
						a = 0,
						n = !1;
					t = t.replace(/\D/g, "");
					for (var s = t.length - 1; s >= 0; s--) {
						var r = t.charAt(s);
						a = parseInt(r, 10), n && (a *= 2) > 9 && (a -= 9), i += a, n = !n
					}
					return 0 === i % 10
				},
				minlength: function(e, i, a) {
					var n = t.isArray(e) ? e.length : this.getLength(t.trim(e), i);
					return this.optional(i) || n >= a
				},
				maxlength: function(e, i, a) {
					var n = t.isArray(e) ? e.length : this.getLength(t.trim(e), i);
					return this.optional(i) || a >= n
				},
				rangelength: function(e, i, a) {
					var n = t.isArray(e) ? e.length : this.getLength(t.trim(e), i);
					return this.optional(i) || n >= a[0] && a[1] >= n
				},
				min: function(t, e, i) {
					return this.optional(e) || t >= i
				},
				max: function(t, e, i) {
					return this.optional(e) || i >= t
				},
				range: function(t, e, i) {
					return this.optional(e) || t >= i[0] && i[1] >= t
				},
				equalTo: function(e, i, a) {
					var n = t(a);
					return this.settings.onfocusout && n.unbind(".validate-equalTo").bind("blur.validate-equalTo", function() {
						t(i).valid()
					}), e === n.val()
				},
				remote: function(e, i, a) {
					if (this.optional(i)) return "dependency-mismatch";
					var n = this.previousValue(i);
					if (this.settings.messages[i.name] || (this.settings.messages[i.name] = {}), n.originalMessage = this.settings.messages[i.name].remote, this.settings.messages[i.name].remote = n.message, a = "string" == typeof a && {
							url: a
						} || a, n.old === e) return n.valid;
					n.old = e;
					var s = this;
					this.startRequest(i);
					var r = {};
					return r[i.name] = e, t.ajax(t.extend(!0, {
						url: a,
						mode: "abort",
						port: "validate" + i.name,
						dataType: "json",
						data: r,
						success: function(a) {
							s.settings.messages[i.name].remote = n.originalMessage;
							var r = a === !0 || "true" === a;
							if (r) {
								var o = s.formSubmitted;
								s.prepareElement(i), s.formSubmitted = o, s.successList.push(i), delete s.invalid[i.name], s.showErrors()
							} else {
								var u = {},
									d = a || s.defaultMessage(i, "remote");
								u[i.name] = n.message = t.isFunction(d) ? d(e) : d, s.invalid[i.name] = !0, s.showErrors(u)
							}
							n.valid = r, s.stopRequest(i, r)
						}
					}, a)), "pending"
				}
			}
		}), t.format = t.validator.format
	}(jQuery),
	function(t) {
		var e = {};
		if (t.ajaxPrefilter) t.ajaxPrefilter(function(t, i, a) {
			var n = t.port;
			"abort" === t.mode && (e[n] && e[n].abort(), e[n] = a)
		});
		else {
			var i = t.ajax;
			t.ajax = function(a) {
				var n = ("mode" in a ? a : t.ajaxSettings).mode,
					s = ("port" in a ? a : t.ajaxSettings).port;
				return "abort" === n ? (e[s] && e[s].abort(), e[s] = i.apply(this, arguments), e[s]) : i.apply(this, arguments)
			}
		}
	}(jQuery),
	function(t) {
		t.extend(t.fn, {
			validateDelegate: function(e, i, a) {
				return this.bind(i, function(i) {
					var n = t(i.target);
					return n.is(e) ? a.apply(n, arguments) : void 0
				})
			}
		})
	}(jQuery),
	function() {
		function t(t) {
			return t.replace(/<.[^<>]*?>/g, " ").replace(/&nbsp;|&#160;/gi, " ").replace(/[.(),;:!?%#$'"_+=\/\-]*/g, "")
		}
		jQuery.validator.addMethod("maxWords", function(e, i, a) {
			return this.optional(i) || a >= t(e).match(/\b\w+\b/g).length
		}, jQuery.validator.format("Please enter {0} words or less.")), jQuery.validator.addMethod("minWords", function(e, i, a) {
			return this.optional(i) || t(e).match(/\b\w+\b/g).length >= a
		}, jQuery.validator.format("Please enter at least {0} words.")), jQuery.validator.addMethod("rangeWords", function(e, i, a) {
			var n = t(e),
				s = /\b\w+\b/g;
			return this.optional(i) || n.match(s).length >= a[0] && n.match(s).length <= a[1]
		}, jQuery.validator.format("Please enter between {0} and {1} words."))
	}(), jQuery.validator.addMethod("letterswithbasicpunc", function(t, e) {
		return this.optional(e) || /^[a-z\-.,()'"\s]+$/i.test(t)
	}, "Letters or punctuation only please"), jQuery.validator.addMethod("alphanumeric", function(t, e) {
		return this.optional(e) || /^\w+$/i.test(t)
	}, "Letters, numbers, and underscores only please"), jQuery.validator.addMethod("lettersonly", function(t, e) {
		return this.optional(e) || /^[a-z]+$/i.test(t)
	}, "Letters only please"), jQuery.validator.addMethod("nowhitespace", function(t, e) {
		return this.optional(e) || /^\S+$/i.test(t)
	}, "No white space please"), jQuery.validator.addMethod("ziprange", function(t, e) {
		return this.optional(e) || /^90[2-5]\d\{2\}-\d{4}$/.test(t)
	}, "Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx"), jQuery.validator.addMethod("zipcodeUS", function(t, e) {
		return this.optional(e) || /^[A-Z0-9 _]*$/i.test(t)
	}, "The specified Postal Code is invalid"), jQuery.validator.addMethod("integer", function(t, e) {
		return this.optional(e) || /^-?\d+$/.test(t)
	}, "A positive or negative non-decimal number please"), jQuery.validator.addMethod("vinUS", function(t) {
		if (17 !== t.length) return !1;
		var e, i, a, n, s, r, o = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "P", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"],
			u = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9],
			d = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2],
			l = 0;
		for (e = 0; 17 > e; e++) {
			if (n = d[e], a = t.slice(e, e + 1), 8 === e && (r = a), isNaN(a)) {
				for (i = 0; o.length > i; i++)
					if (a.toUpperCase() === o[i]) {
						a = u[i], a *= n, isNaN(r) && 8 === i && (r = o[i]);
						break
					}
			} else a *= n;
			l += a
		}
		return s = l % 11, 10 === s && (s = "X"), s === r ? !0 : !1
	}, "The specified vehicle identification number (VIN) is invalid."), jQuery.validator.addMethod("dateITA", function(t, e) {
		var i = !1,
			a = /^\d{1,2}\/\d{1,2}\/\d{4}$/;
		if (a.test(t)) {
			var n = t.split("/"),
				s = parseInt(n[0], 10),
				r = parseInt(n[1], 10),
				o = parseInt(n[2], 10),
				u = new Date(o, r - 1, s);
			i = u.getFullYear() === o && u.getMonth() === r - 1 && u.getDate() === s ? !0 : !1
		} else i = !1;
		return this.optional(e) || i
	}, "Please enter a correct date"), jQuery.validator.addMethod("iban", function(t, e) {
		if (this.optional(e)) return !0;
		if (!/^([a-zA-Z0-9]{4} ){2,8}[a-zA-Z0-9]{1,4}|[a-zA-Z0-9]{12,34}$/.test(t)) return !1;
		var i = t.replace(/ /g, "").toUpperCase(),
			a = i.substring(0, 2),
			n = {
				AL: "\\d{8}[\\dA-Z]{16}",
				AD: "\\d{8}[\\dA-Z]{12}",
				AT: "\\d{16}",
				AZ: "[\\dA-Z]{4}\\d{20}",
				BE: "\\d{12}",
				BH: "[A-Z]{4}[\\dA-Z]{14}",
				BA: "\\d{16}",
				BR: "\\d{23}[A-Z][\\dA-Z]",
				BG: "[A-Z]{4}\\d{6}[\\dA-Z]{8}",
				CR: "\\d{17}",
				HR: "\\d{17}",
				CY: "\\d{8}[\\dA-Z]{16}",
				CZ: "\\d{20}",
				DK: "\\d{14}",
				DO: "[A-Z]{4}\\d{20}",
				EE: "\\d{16}",
				FO: "\\d{14}",
				FI: "\\d{14}",
				FR: "\\d{10}[\\dA-Z]{11}\\d{2}",
				GE: "[\\dA-Z]{2}\\d{16}",
				DE: "\\d{18}",
				GI: "[A-Z]{4}[\\dA-Z]{15}",
				GR: "\\d{7}[\\dA-Z]{16}",
				GL: "\\d{14}",
				GT: "[\\dA-Z]{4}[\\dA-Z]{20}",
				HU: "\\d{24}",
				IS: "\\d{22}",
				IE: "[\\dA-Z]{4}\\d{14}",
				IL: "\\d{19}",
				IT: "[A-Z]\\d{10}[\\dA-Z]{12}",
				KZ: "\\d{3}[\\dA-Z]{13}",
				KW: "[A-Z]{4}[\\dA-Z]{22}",
				LV: "[A-Z]{4}[\\dA-Z]{13}",
				LB: "\\d{4}[\\dA-Z]{20}",
				LI: "\\d{5}[\\dA-Z]{12}",
				LT: "\\d{16}",
				LU: "\\d{3}[\\dA-Z]{13}",
				MK: "\\d{3}[\\dA-Z]{10}\\d{2}",
				MT: "[A-Z]{4}\\d{5}[\\dA-Z]{18}",
				MR: "\\d{23}",
				MU: "[A-Z]{4}\\d{19}[A-Z]{3}",
				MC: "\\d{10}[\\dA-Z]{11}\\d{2}",
				MD: "[\\dA-Z]{2}\\d{18}",
				ME: "\\d{18}",
				NL: "[A-Z]{4}\\d{10}",
				NO: "\\d{11}",
				PK: "[\\dA-Z]{4}\\d{16}",
				PS: "[\\dA-Z]{4}\\d{21}",
				PL: "\\d{24}",
				PT: "\\d{21}",
				RO: "[A-Z]{4}[\\dA-Z]{16}",
				SM: "[A-Z]\\d{10}[\\dA-Z]{12}",
				SA: "\\d{2}[\\dA-Z]{18}",
				RS: "\\d{18}",
				SK: "\\d{20}",
				SI: "\\d{15}",
				ES: "\\d{20}",
				SE: "\\d{20}",
				CH: "\\d{5}[\\dA-Z]{12}",
				TN: "\\d{20}",
				TR: "\\d{5}[\\dA-Z]{17}",
				AE: "\\d{3}\\d{16}",
				GB: "[A-Z]{4}\\d{14}",
				VG: "[\\dA-Z]{4}\\d{16}"
			},
			s = n[a];
		if (void 0 !== s) {
			var r = RegExp("^[A-Z]{2}\\d{2}" + s + "$", "");
			if (!r.test(i)) return !1
		}
		for (var o, u = i.substring(4, i.length) + i.substring(0, 4), d = "", l = !0, h = 0; u.length > h; h++) o = u.charAt(h), "0" !== o && (l = !1), l || (d += "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf(o));
		for (var c = "", f = "", p = 0; d.length > p; p++) {
			var m = d.charAt(p);
			f = "" + c + m, c = f % 97
		}
		return 1 === c
	}, "Please specify a valid IBAN"), jQuery.validator.addMethod("dateNL", function(t, e) {
		return this.optional(e) || /^(0?[1-9]|[12]\d|3[01])[\.\/\-](0?[1-9]|1[012])[\.\/\-]([12]\d)?(\d\d)$/.test(t)
	}, "Please enter a correct date"), jQuery.validator.addMethod("phoneNL", function(t, e) {
		return this.optional(e) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)[1-9]((\s|\s?\-\s?)?[0-9]){8}$/.test(t)
	}, "Please specify a valid phone number."), jQuery.validator.addMethod("mobileNL", function(t, e) {
		return this.optional(e) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)6((\s|\s?\-\s?)?[0-9]){8}$/.test(t)
	}, "Please specify a valid mobile number"), jQuery.validator.addMethod("postalcodeNL", function(t, e) {
		return this.optional(e) || /^[1-9][0-9]{3}\s?[a-zA-Z]{2}$/.test(t)
	}, "Please specify a valid postal code"), jQuery.validator.addMethod("bankaccountNL", function(t, e) {
		if (this.optional(e)) return !0;
		if (!/^[0-9]{9}|([0-9]{2} ){3}[0-9]{3}$/.test(t)) return !1;
		for (var i = t.replace(/ /g, ""), a = 0, n = i.length, s = 0; n > s; s++) {
			var r = n - s,
				o = i.substring(s, s + 1);
			a += r * o
		}
		return 0 === a % 11
	}, "Please specify a valid bank account number"), jQuery.validator.addMethod("giroaccountNL", function(t, e) {
		return this.optional(e) || /^[0-9]{1,7}$/.test(t)
	}, "Please specify a valid giro account number"), jQuery.validator.addMethod("bankorgiroaccountNL", function(t, e) {
		return this.optional(e) || $.validator.methods.bankaccountNL.call(this, t, e) || $.validator.methods.giroaccountNL.call(this, t, e)
	}, "Please specify a valid bank or giro account number"), jQuery.validator.addMethod("time", function(t, e) {
		return this.optional(e) || /^([01]\d|2[0-3])(:[0-5]\d){1,2}$/.test(t)
	}, "Please enter a valid time, between 00:00 and 23:59"), jQuery.validator.addMethod("time12h", function(t, e) {
		return this.optional(e) || /^((0?[1-9]|1[012])(:[0-5]\d){1,2}(\ ?[AP]M))$/i.test(t)
	}, "Please enter a valid time in 12-hour am/pm format"), jQuery.validator.addMethod("phoneUS", function(t, e) {
		return t = t.replace(/\s+/g, ""), this.optional(e) || t.length > 9 && t.match(/^(\+?1-?)?(\([2-9]\d{2}\)|[2-9]\d{2})-?[2-9]\d{2}-?\d{4}$/)
	}, "Please specify a valid phone number"), jQuery.validator.addMethod("phoneUK", function(t, e) {
		return t = t.replace(/\(|\)|\s+|-/g, ""), this.optional(e) || t.length > 9 && t.match(/^(?:(?:(?:00\s?|\+)44\s?)|(?:\(?0))(?:\d{2}\)?\s?\d{4}\s?\d{4}|\d{3}\)?\s?\d{3}\s?\d{3,4}|\d{4}\)?\s?(?:\d{5}|\d{3}\s?\d{3})|\d{5}\)?\s?\d{4,5})$/)
	}, "Please specify a valid phone number"), jQuery.validator.addMethod("mobileUK", function(t, e) {
		return t = t.replace(/\(|\)|\s+|-/g, ""), this.optional(e) || t.length > 9 && t.match(/^(?:(?:(?:00\s?|\+)44\s?|0)7(?:[45789]\d{2}|624)\s?\d{3}\s?\d{3})$/)
	}, "Please specify a valid mobile number"), jQuery.validator.addMethod("phonesUK", function(t, e) {
		return t = t.replace(/\(|\)|\s+|-/g, ""), this.optional(e) || t.length > 9 && t.match(/^(?:(?:(?:00\s?|\+)44\s?|0)(?:1\d{8,9}|[23]\d{9}|7(?:[45789]\d{8}|624\d{6})))$/)
	}, "Please specify a valid uk phone number"), jQuery.validator.addMethod("postcodeUK", function(t, e) {
		return this.optional(e) || /^((([A-PR-UWYZ][0-9])|([A-PR-UWYZ][0-9][0-9])|([A-PR-UWYZ][A-HK-Y][0-9])|([A-PR-UWYZ][A-HK-Y][0-9][0-9])|([A-PR-UWYZ][0-9][A-HJKSTUW])|([A-PR-UWYZ][A-HK-Y][0-9][ABEHMNPRVWXY]))\s?([0-9][ABD-HJLNP-UW-Z]{2})|(GIR)\s?(0AA))$/i.test(t)
	}, "Please specify a valid UK postcode"), jQuery.validator.addMethod("strippedminlength", function(t, e, i) {
		return jQuery(t).text().length >= i
	}, jQuery.validator.format("Please enter at least {0} characters")), jQuery.validator.addMethod("email2", function(t, e) {
		return this.optional(e) || /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)*(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(t)
	}, jQuery.validator.messages.email), jQuery.validator.addMethod("url2", function(t, e) {
		return this.optional(e) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)*(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(t)
	}, jQuery.validator.messages.url), jQuery.validator.addMethod("creditcardtypes", function(t, e, i) {
		if (/[^0-9\-]+/.test(t)) return !1;
		t = t.replace(/\D/g, "");
		var a = 0;
		return i.mastercard && (a |= 1), i.visa && (a |= 2), i.amex && (a |= 4), i.dinersclub && (a |= 8), i.enroute && (a |= 16), i.discover && (a |= 32), i.jcb && (a |= 64), i.unknown && (a |= 128), i.all && (a = 255), 1 & a && /^(5[12345])/.test(t) ? 16 === t.length : 2 & a && /^(4)/.test(t) ? 16 === t.length : 4 & a && /^(3[47])/.test(t) ? 15 === t.length : 8 & a && /^(3(0[012345]|[68]))/.test(t) ? 14 === t.length : 16 & a && /^(2(014|149))/.test(t) ? 15 === t.length : 32 & a && /^(6011)/.test(t) ? 16 === t.length : 64 & a && /^(3)/.test(t) ? 16 === t.length : 64 & a && /^(2131|1800)/.test(t) ? 15 === t.length : 128 & a ? !0 : !1
	}, "Please enter a valid credit card number."), jQuery.validator.addMethod("ipv4", function(t, e) {
		return this.optional(e) || /^(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)$/i.test(t)
	}, "Please enter a valid IP v4 address."), jQuery.validator.addMethod("ipv6", function(t, e) {
		return this.optional(e) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(t)
	}, "Please enter a valid IP v6 address."), jQuery.validator.addMethod("pattern", function(t, e, i) {
		return this.optional(e) ? !0 : ("string" == typeof i && (i = RegExp("^(?:" + i + ")$")), i.test(t))
	}, "Invalid format."), jQuery.validator.addMethod("require_from_group", function(t, e, i) {
		var a = this,
			n = i[1],
			s = $(n, e.form).filter(function() {
				return a.elementValue(this)
			}).length >= i[0];
		if (!$(e).data("being_validated")) {
			var r = $(n, e.form);
			r.data("being_validated", !0), r.valid(), r.data("being_validated", !1)
		}
		return s
	}, jQuery.format("Please fill at least {0} of these fields.")), jQuery.validator.addMethod("skip_or_fill_minimum", function(t, e, i) {
		var a = this,
			n = i[0],
			s = i[1],
			r = $(s, e.form).filter(function() {
				return a.elementValue(this)
			}).length,
			o = r >= n || 0 === r;
		if (!$(e).data("being_validated")) {
			var u = $(s, e.form);
			u.data("being_validated", !0), u.valid(), u.data("being_validated", !1)
		}
		return o
	}, jQuery.format("Please either skip these fields or fill at least {0} of them.")), jQuery.validator.addMethod("accept", function(t, e, i) {
		var a, n, s = "string" == typeof i ? i.replace(/\s/g, "").replace(/,/g, "|") : "image/*",
			r = this.optional(e);
		if (r) return r;
		if ("file" === $(e).attr("type") && (s = s.replace(/\*/g, ".*"), e.files && e.files.length))
			for (a = 0; e.files.length > a; a++)
				if (n = e.files[a], !n.type.match(RegExp(".?(" + s + ")$", "i"))) return !1;
		return !0
	}, jQuery.format("Please enter a value with a valid mimetype.")), jQuery.validator.addMethod("extension", function(t, e, i) {
		return i = "string" == typeof i ? i.replace(/,/g, "|") : "png|jpe?g|gif", this.optional(e) || t.match(RegExp(".(" + i + ")$", "i"))
	}, jQuery.format("Please enter a value with a valid extension.")), window.log = function() {
		if (log.history = log.history || [], log.history.push(arguments), this.console) {
			arguments.callee = arguments.callee.caller;
			var t = [].slice.call(arguments);
			"object" == typeof console.log ? log.apply.call(console.log, console, t) : console.log.apply(console, t)
		}
	},
	function(t) {
		function e() {}
		for (var i, a = "assert,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,timeStamp,profile,profileEnd,time,timeEnd,trace,warn".split(","); i = a.pop();) t[i] = t[i] || e
	}(function() {
		try {
			return console.log(), window.console
		} catch (t) {
			return window.console = {}
		}
	}()),
	function(t, e, i) {
		function a(t) {
			var e = {},
				a = /^jQuery\d+$/;
			return i.each(t.attributes, function(t, i) {
				i.specified && !a.test(i.name) && (e[i.name] = i.value)
			}), e
		}

		function n(t, a) {
			var n = this,
				s = i(n);
			if (n.value == s.attr("placeholder") && s.hasClass("placeholder"))
				if (s.data("placeholder-password")) {
					if (s = s.hide().next().show().attr("id", s.removeAttr("id").data("placeholder-id")), t === !0) return s[0].value = a;
					s.focus()
				} else n.value = "", s.removeClass("placeholder"), n == e.activeElement && n.select()
		}

		function s() {
			var t, e = this,
				s = i(e),
				r = this.id;
			if ("" == e.value) {
				if ("password" == e.type) {
					if (!s.data("placeholder-textinput")) {
						try {
							t = s.clone().attr({
								type: "text"
							})
						} catch (o) {
							t = i("<input>").attr(i.extend(a(this), {
								type: "text"
							}))
						}
						t.removeAttr("name").data({
							"placeholder-password": !0,
							"placeholder-id": r
						}).bind("focus.placeholder", n), s.data({
							"placeholder-textinput": t,
							"placeholder-id": r
						}).before(t)
					}
					s = s.removeAttr("id").hide().prev().attr("id", r).show()
				}
				s.addClass("placeholder"), s[0].value = s.attr("placeholder")
			} else s.removeClass("placeholder")
		}
		var r, o, u = "placeholder" in e.createElement("input"),
			d = "placeholder" in e.createElement("textarea"),
			l = i.fn,
			h = i.valHooks;
		u && d ? (o = l.placeholder = function() {
			return this
		}, o.input = o.textarea = !0) : (o = l.placeholder = function() {
			var t = this;
			return t.filter((u ? "textarea" : ":input") + "[placeholder]").not(".placeholder").bind({
				"focus.placeholder": n,
				"blur.placeholder": s
			}).data("placeholder-enabled", !0).trigger("blur.placeholder"), t
		}, o.input = u, o.textarea = d, r = {
			get: function(t) {
				var e = i(t);
				return e.data("placeholder-enabled") && e.hasClass("placeholder") ? "" : t.value
			},
			set: function(t, a) {
				var r = i(t);
				return r.data("placeholder-enabled") ? ("" == a ? (t.value = a, t != e.activeElement && s.call(t)) : r.hasClass("placeholder") ? n.call(t, !0, a) || (t.value = a) : t.value = a, r) : t.value = a
			}
		}, u || (h.input = r), d || (h.textarea = r), i(function() {
			i(e).delegate("form", "submit.placeholder", function() {
				var t = i(".placeholder", this).each(n);
				setTimeout(function() {
					t.each(s)
				}, 10)
			})
		}), i(t).bind("beforeunload.placeholder", function() {
			i(".placeholder").each(function() {
				this.value = ""
			})
		}))
	}(this, document, jQuery), Gumby.ready(function() {
		(Gumby.isOldie || Gumby.$dom.find("html").hasClass("ie9")) && $("input, textarea").placeholder()
	});
var phone_active_last = !1;
$(function() {
	$(".navbar a").hover(function() {}, function() {
		$(window).scrollTop($(window).scrollTop() + 1), $(window).scrollTop($(window).scrollTop() - 1)
	}), $(".validateme").validate({
		highlight: function(t, e, i) {
			$(t).addClass(e).removeClass(i), $(t).parent().addClass(e).removeClass(i), $(t.form).find("label[for=" + t.id + "]").addClass(e)
		},
		unhighlight: function(t, e, i) {
			$(t).removeClass(e).addClass(i), $(t).parent().removeClass(e).addClass(i), $(t.form).find("label[for=" + t.id + "]").removeClass(e)
		},
		submitHandler: function(t) {
			$('button[type="submit"]', t).prop("disabled", !0), t.submit()
		},
		errorElement: "em"
	}), jQuery.validator.addClassRules({
		phone_US: {
			required: !0,
			phoneUS: !0
		},
		zipcode_US: {
			required: !0,
			zipcodeUS: !0
		}
	}), $("#phone").on("blur", function() {
		$(this.form).valid()
	}), $(".navbar .callus a").on("gumby.onTrigger", function(t, e) {
		e && (window.location = "tel:18003445901", phone_active_last = !0)
	});
	var t = 1,
		e = $(".animated-display");
	e.find(".left li").eq(0).delay(500).fadeTo(500, 1), setInterval(function() {
		e.find(".left li").eq(t - 1).fadeTo(500, 0), e.find(".left li").eq(t).fadeTo(1e3, 1), t >= 2 ? t = 0 : t++
	}, 3e3);
	var i = 1;
	e.find(".right li").eq(0).delay(500).fadeTo(500, 1), setInterval(function() {
		e.find(".right li").eq(i - 1).fadeTo(500, 0), e.find(".right li").eq(i).fadeTo(1e3, 1), i >= 2 ? i = 0 : i++
	}, 5e3)
});
var current_path = window.location.pathname.substr(1);
"" == current_path && (current_path = "homepage");
var the_origin = window.location.origin,
	video_holder = [];
$(function() {
	$(".navbar .callus a").click(function() {
		_gaq.push(["_trackEvent", "globalheader", "phone-click", current_path])
	}), $(".navbar #login_btn").click(function() {
		_gaq.push(["_trackEvent", "globalheader", "login-click", current_path])
	}), $("body.about_wrapper.case-studies .page-head .side-panel a").click(function() {
		_gaq.push(["_trackEvent", "case-studies", "get-a-quote"])
	}), $("body.about_wrapper .contact-callout .btn a").on("gumby.onTrigger", function() {
		$(this).hasClass("active") ? _gaq.push(["_trackEvent", "contact-drawer", current_path, "open"]) : _gaq.push(["_trackEvent", "contact-drawer", current_path, "close"])
	}), $(".new-landing-form").on("submit", function() {
		_gaq.push(["_trackEvent", "landingpage-form", current_path, "submit"])
	}), $(".home_wrapper .mast-statement .btn.primary a").click(function() {
		_gaq.push(["_trackEvent", "homepage", "discover-product", "top"])
	}), $(".home_wrapper .mast-statement .btn.secondary a").click(function() {
		_gaq.push(["_trackEvent", "homepage", "get-a-quote-today", "top"])
	}), $(".home_wrapper .sect-container .contact-callout a").click(function() {
		_gaq.push(["_trackEvent", "homepage", "discover-product", "middle"])
	}), $(".home_wrapper > .row .contact-callout a").eq(1).click(function() {
		_gaq.push(["_trackEvent", "homepage", "get-a-quote-today", "bottom"])
	})
});

// Login Button Dropdown Menu

$('[data-login-show]').click(function(e) {
	e.preventDefault();
	if ( $('.login__modal--show').length != 0 ) {
		$('.login__modal--show').removeClass('login__modal--show');
		$('#first_nav-list').removeClass('first__nav-list--login_active');
	} else {
		$('.login__modal').addClass('login__modal--show');
		$('#first_nav-list').addClass('first__nav-list--login_active');
	}
});

// Ouibounce Modal Stuff
$('#ouibounce-modal').click(function (e) {
  console.log(e.target);
  if (e.target == this || e.target.classList.contains("ouibounce-close")) {
    $('#ouibounce-modal').hide();
  }
});

if(window.location.hash == "#thanks") {
  $('#ouibounce-modal').hide();
  $('.ouibounce-thanks').show();
  setTimeout(function() {
    $('.ouibounce-thanks').fadeOut(function() {
      if (
				((window.location.href.indexOf('workplace-digital-signage-solution2') !== -1) ||
				(window.location.href.indexOf('products/digital-bulletin-boards') !== -1) ||
				(window.location.href.indexOf('products/digital-message-board') !== -1) ||
				(window.location.href.indexOf('products/electronic-bulletin-boards') !== -1))
			) {
				window.location = 'http://www.themarlincompany.com/images/uploads/gated-assets/8_critical_questions_040817';
			} else if (window.location.href.indexOf('workplace-safety-digital-signage') !== -1) {
				window.location = 'http://www.themarlincompany.com/images/uploads/gated-assets/Guide_5_Proven_Strategies_022317.pdf';
			}
    });
  }, 3000)
}
// var tag = document.createElement("script");
// tag.src = "https://www.youtube.com/iframe_api";
// var firstScriptTag = document.getElementsByTagName("script")[0];
// firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
